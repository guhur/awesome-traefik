version: '3.8'

services:
  postgres:
    image: postgres:11
    container_name: n8n_db
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${DB_USER:-n8n}
      - POSTGRES_PASSWORD=$DB_PASS
      - POSTGRES_DB=${DB_NAME:-n8n}
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Paris
    volumes:
      - ./init-data.sh:/docker-entrypoint-initdb.d/init-data.sh
      - ${VOLUME_DB:-$HOME/.data/db}:/var/lib/mysql
    networks:
      - lan

  n8n:
    image: n8n
    container_name: n8n_python
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: n8n
    restart: unless-stopped
    depends_on:
      - postgres
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - NODE_ENV=production
      - GENERIC_TIMEZONE=$TIMEZONE
      - WEBHOOK_URL=https://${N8N_PREFIX:-n8n}.${DOMAIN}
      - DB_TYPE=${DB_TYPE:-postgresdb}
      - DB_POSTGRESDB_PORT=${DB_PORT:-5432}
      - DB_POSTGRESDB_DATABASE=${DB_NAME:-n8n}
      - DB_POSTGRESDB_HOST=n8n_db
      - DB_POSTGRESDB_USER=${DB_USER:-n8n}
      - DB_POSTGRESDB_PASSWORD=$DB_PASS
      - N8N_EMAIL_MODE=smtp
      - N8N_SMTP_HOST=$SMTP_HOST
      - N8N_SMTP_PORT=${SMTP_PORT:-587}
      - N8N_SMTP_USER=$SMTP_USER
      - N8N_SMTP_PASS=$SMTP_PASS
      - N8N_SMTP_SENDER=${N8N_SMTP_SENDER}
      - N8N_SMTP_SSL=true
    volumes:
      - ${VOLUME}:/home/node/.n8n
    networks:
      - traefik_network
      - lan
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik_network
      - traefik.http.routers.n8n.entrypoints=web,websecure
      - traefik.http.routers.n8n.rule=Host(`${N8N_PREFIX:-n8n}.${DOMAIN}`)
      - traefik.http.services.n8n.loadbalancer.server.port=5678
      - traefik.http.routers.n8n.tls=true
      - traefik.http.routers.n8n.tls.certresolver=leresolver
      - traefik.http.middlewares.n8n.headers.SSLRedirect=true
      - traefik.http.middlewares.n8n.headers.STSSeconds=315360000
      - traefik.http.middlewares.n8n.headers.browserXSSFilter=true
      - traefik.http.middlewares.n8n.headers.contentTypeNosniff=true
      - traefik.http.middlewares.n8n.headers.forceSTSHeader=true
      - traefik.http.middlewares.n8n.headers.SSLHost=${DOMAIN}
      - traefik.http.middlewares.n8n.headers.STSIncludeSubdomains=true
      - traefik.http.middlewares.n8n.headers.STSPreload=true
      - traefik.http.routers.n8n.middlewares=n8n@docker
      - traefik.http.middlewares.cors.headers.customResponseHeaders.Access-Control-Allow-Origin=*
      - traefik.http.middlewares.cors.headers.customResponseHeaders.Access-Control-Allow-Methods=GET, POST, OPTIONS
      - traefik.http.middlewares.cors.headers.customResponseHeaders.Access-Control-Allow-Headers=DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization
      - traefik.http.routers.n8n.middlewares=cors@docker

networks:
  lan:
  traefik_network:
    external: true 
