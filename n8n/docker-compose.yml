version: '3.8'

services:
  postgres:
    image: postgres:11
    container_name: n8n_db
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${DB_USER:-n8n}
      - POSTGRES_PASSWORD=$DB_PASS
      - POSTGRES_DB=${DB_NAME:-n8n}
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Paris
    volumes:
      - ./init-data.sh:/docker-entrypoint-initdb.d/init-data.sh
    networks:
      - lan
    volumes:
      - db:/var/lib/mysql

  n8n:
    image: n8n
    container_name: n8n_python
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: n8n
    restart: unless-stopped
    depends_on:
      - postgres
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - NODE_ENV=production
      - GENERIC_TIMEZONE=$TIMEZONE
      - WEBHOOK_URL=https://${N8N_PREFIX:-n8n}.${DOMAIN}
      - DB_TYPE=${DB_TYPE:-postgresdb}
      - DB_POSTGRESDB_PORT=${DB_PORT:-5432}
      - DB_POSTGRESDB_DATABASE=${DB_NAME:-n8n}
      - DB_POSTGRESDB_HOST=n8n_db
      - DB_POSTGRESDB_USER=${DB_USER:-n8n}
      - DB_POSTGRESDB_PASSWORD=$DB_PASS
    volumes:
      - ${VOLUME}:/home/node/.n8n
    networks:
      - traefik_network
      - lan
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik_network"
      - "traefik.http.routers.n8n.entrypoints=web,websecure"
      - "traefik.http.routers.n8n.rule=Host(`${N8N_PREFIX:-n8n}.${DOMAIN}`)"
      - "traefik.http.services.n8n.loadbalancer.server.port=5678"
      - "traefik.http.routers.n8n.tls=true"
      - "traefik.http.routers.n8n.tls.certresolver=leresolver"
      - traefik.http.middlewares.n8n.headers.SSLRedirect=true
      - traefik.http.middlewares.n8n.headers.STSSeconds=315360000
      - traefik.http.middlewares.n8n.headers.browserXSSFilter=true
      - traefik.http.middlewares.n8n.headers.contentTypeNosniff=true
      - traefik.http.middlewares.n8n.headers.forceSTSHeader=true
      - traefik.http.middlewares.n8n.headers.SSLHost=${DOMAIN}
      - traefik.http.middlewares.n8n.headers.STSIncludeSubdomains=true
      - traefik.http.middlewares.n8n.headers.STSPreload=true
      - traefik.http.routers.n8n.middlewares=n8n@docker

networks:
  lan:
  traefik_network:
    external: true 

volumes:
  db:
